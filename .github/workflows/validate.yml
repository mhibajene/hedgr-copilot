name: validate
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review, edited, labeled, unlabeled]
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: validate-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Always pick Node first so Corepack resolves the right pnpm
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack + pin pnpm
        run: |
          corepack enable
          corepack install
          node -v
          pnpm -v

      - name: Lint workflows (actionlint)
        uses: rhysd/actionlint@v1

      - name: Guard: workflow invariants
        run: node scripts/ci/guard-workflows.mjs

      - name: Guard: lockfile/manifest drift
        run: node scripts/ci/guard-lock-drift.mjs

      - name: Install (frozen lockfile)
        run: pnpm -r install --frozen-lockfile

      - name: Workspace typecheck
        run: pnpm -w typecheck

      - name: Workspace lint
        run: pnpm -w lint

      - name: Unit tests
        run: pnpm -w test -- --run

      - name: QA Gate — require product:approved + qa:approved
        if: ${{ github.event_name == 'pull_request'
                && !github.event.pull_request.draft
                && github.actor != 'dependabot[bot]'
                && github.actor != 'renovate[bot]'
                && (env.QA_GATE_BYPASS != '1') }}
        uses: actions/github-script@v7
        with:
          script: |
            const required = ['product:approved','qa:approved'];
            const labels = (context.payload.pull_request?.labels ?? []).map(l => l.name);
            const missing = required.filter(x => !labels.includes(x));
            if (missing.length) core.setFailed(`Missing required QA labels: ${missing.join(', ')}`);
            else core.info('QA labels present ✔');