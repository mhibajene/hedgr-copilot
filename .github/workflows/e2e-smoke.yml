name: E2E smoke (@hedgr/frontend)
on:
  pull_request:
    branches: [ "*" ]

# allow the workflow to write commit statuses
permissions:
  contents: read
  statuses: write
  pull-requests: read

jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_AUTH_MODE: mock
      NEXT_PUBLIC_DEFI_MODE: mock
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # bridge: mark required context as pending at start
      - name: Publish pending commit status (start)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            await github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state: 'pending',
              context: 'E2E smoke (@hedgr/frontend)',
              description: 'E2E job started',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack & install pinned pnpm
        run: |
          corepack enable
          corepack install
          node -v
          pnpm -v

      - name: Compute pnpm store path
        id: pnpm_store
        run: echo "path=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm_store.outputs.path }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies (frozen)
        run: pnpm -r install --frozen-lockfile

      - name: Typecheck (workspace)
        run: pnpm -w typecheck

      - name: Lint (workspace)
        run: pnpm -w lint

      - name: Unit tests
        run: pnpm -w test

      - name: Build frontend
        run: pnpm --filter @hedgr/frontend run build

      - name: Install Playwright
        run: pnpm --filter @hedgr/frontend exec playwright install --with-deps

      - name: Run E2E tests
        run: pnpm --filter @hedgr/frontend run e2e:ci

      # bridge: set required context to success/failure to satisfy branch protection
      - name: Report E2E status (success)
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            await github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state: 'success',
              context: 'E2E smoke (@hedgr/frontend)',
              description: 'Playwright E2E passed',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

      - name: Report E2E status (failure)
        if: ${{ failure() || cancelled() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            await github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state: 'failure',
              context: 'E2E smoke (@hedgr/frontend)',
              description: 'Playwright E2E failed',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });